---
description: 
globs: 
alwaysApply: false
---
# Refactor HomePage Global to Blocks To-Do

This rule outlines the steps needed to refactor the `HomePage` global collection into a more flexible `Pages` collection using Payload CMS blocks, following a structured directory pattern for blocks.

üéØ **Updated To-Do List Based on Your Setup**

1.  **Remove or Refactor `HomePage` Global**
    *   Delete or archive [`src/globals/HomePage.ts`](mdc:src/globals/HomePage.ts).
    *   Create corresponding block configurations under `src/blocks/` using the new directory structure. For each conceptual section (e.g., Hero, Services), you'll typically have:
        *   `src/blocks/Hero/index.ts`: Exports the block configuration (potentially multiple variants).
        *   `src/blocks/Hero/default.ts`: Defines the fields for the default Hero block variant.
        *   (Optional) `src/blocks/Hero/variants/Hero1.ts`: Defines fields for other variants.
        *   (Optional) `src/blocks/Hero/hooks/hook1.ts`: Block-specific hooks.
        *   (Optional) `src/blocks/Hero/endpoints/endpoint1.ts`: Block-specific endpoints.
    *   Migrate fields from `HomePage.ts` sections into their respective block definitions (e.g., `heroTitle`, `heroSubtitle` into `src/blocks/Hero/default.ts`). Key sections/blocks to create:
        *   `Hero`
        *   `Services`
        *   `ProjectHighlights` (or similar name for Projects section)
        *   `About`
        *   `Testimonials`
        *   `Gallery`
        *   `ServiceArea`
        *   `Contact`
        *   `FAQ`
    *   Ensure each block is modular and reusable. The `index.ts` file in each block directory should export the final block configuration object or an array of variants.

2.  **Create `Pages.ts` collection**
    *   Add [`src/collections/Pages.ts`](mdc:src/collections/Pages.ts).
    *   Include fields:
        *   `title` (text)
        *   `slug` (text, unique, required, index: true)
        *   `layout` (blocks): Reference the block configurations exported from their respective `index.ts` files.
        ```ts
        import Hero from '../blocks/Hero'; // Assuming index.ts exports the config
        import Services from '../blocks/Services';
        import ProjectHighlights from '../blocks/ProjectHighlights';
        import About from '../blocks/About';
        import Testimonials from '../blocks/Testimonials';
        import Gallery from '../blocks/Gallery';
        import ServiceArea from '../blocks/ServiceArea';
        import Contact from '../blocks/Contact';
        import FAQ from '../blocks/FAQ';
        // ... other block imports

        // ... inside the Pages collection definition ...
        {
          name: 'layout',
          label: 'Page Layout',
          type: 'blocks',
          minRows: 1,
          blocks: [
            Hero,
            Services,
            ProjectHighlights,
            About,
            Testimonials,
            Gallery,
            ServiceArea,
            Contact,
            FAQ,
            // Add any other relevant blocks
          ]
        }
        ```

3.  **Update [`payload.config.ts`](mdc:payload.config.ts)**
    *   Remove `HomePage` from the `globals` array.
    *   Add `Pages` to the `collections` array.

4.  **Create `Footer.ts` Global**
    *   Create [`src/globals/Footer.ts`](mdc:src/globals/Footer.ts).
    *   Include fields like:
        *   Social links (array or relationship)
        *   Text or rich text (copyright)
        *   Optional: image/logo field
    *   Add `Footer` to the `globals` array in [`payload.config.ts`](mdc:payload.config.ts).

5.  **Update [`src/seed.ts`](mdc:src/seed.ts)**
    *   **Remove** the entire `// --- Seed HomePage ---` section (approximately lines 149-197 in the current file), including the `payload.updateGlobal({ slug: 'home-page', ... })` call and its associated logging.
    *   **Add** logic to seed a new Page document within the tenant seeding scope (after creating the tenant user and `simulatedReq`). Use `payload.create({ collection: 'pages', ... })`.
    *   Map the data previously seeded in `HomePage` to the corresponding blocks within the `layout` field of the new 'home' page.
    *   **Example:**
        ```ts
        payload.logger.info(`Seeding 'home' page for tenant ${tenantId}...`);
        await payload.create({
          collection: 'pages',
          data: {
            title: 'Domov', // Or 'Home'
            slug: 'home',
            layout: [
              // Hero Block
              {
                blockType: 'hero', // Matches the slug defined in src/blocks/Hero/index.ts
                hideSection: false, // Assuming 'hideSection' field exists in the block
                title: 'Va≈° Zanesljiv Partner za Vodoin≈°talacije', // Previously heroTitle
                subtitle: 'A1 IN≈†TALACIJE d.o.o. - Kakovost in zanesljivost na prvem mestu.', // Previously heroSubtitle
                features: [ // Previously heroFeatures
                  { iconText: '10+', text: 'Let izku≈°enj' },
                  { iconText: '‚úì', text: 'Certificirani mojstri' },
                  { iconText: '‚úì', text: 'Garancija na delo' },
                ],
                // Add other fields defined in your Hero block
              },
              // Services Block
              {
                blockType: 'services', // Matches the slug defined in src/blocks/Services/index.ts
                hideSection: false, // Previously servicesHideSection
                title: 'Na≈°e Storitve', // Previously servicesTitle
                description: 'Nudimo ≈°irok spekter vodoin≈°talaterskih storitev.', // Previously servicesDescription
                // selectedServices: [], // Link actual services if needed
              },
              // Project Highlights Block
              {
                  blockType: 'projectHighlights', // Or your chosen slug
                  hideSection: false, // Previously projectsHideSection
                  title: 'Na≈°i Projekti', // Previously projectHighlightsTitle
                  description: 'Oglejte si nekaj na≈°ih uspe≈°no zakljuƒçenih projektov.', // Previously projectHighlightsDescription
                  buttonText: 'Vsi Projekti', // Previously projectHighlightsButtonText
                  buttonHref: '/projekti', // Previously projectHighlightsButtonHref
                  // highlightedProjects: [], // Link actual projects if needed
              },
              // About Block
              {
                  blockType: 'about', // Or your chosen slug
                  hideSection: false, // Previously aboutHideSection
                  title: 'Spoznajte nas', // Previously aboutTitle
                  description: 'Smo ekipa izku≈°enih vodoin≈°talaterjev...', // Previously aboutDescription
                  // aboutBenefits: [],
              },
              // Service Area Block
              {
                  blockType: 'serviceArea', // Or your chosen slug
                  hideSection: false, // Previously serviceAreaHideSection
                  title: 'Kje delujemo?', // Previously serviceAreaTitle
                  description: 'Na≈°e storitve nudimo v **Ljubljani** in ≈°ir≈°i okolici.', // Previously serviceAreaDescription
                  showMap: true, // Previously showMap
                  locations: [ { name: 'Ljubljana' }, { name: 'Dom≈æale' }, { name: 'Kamnik' } ], // Previously serviceAreaLocations
              },
              // Contact Block
              {
                  blockType: 'contact', // Or your chosen slug
                  hideSection: false, // Previously contactHideSection
                  title: 'Stopite v stik', // Previously contactTitle
                  description: 'Za vsa vpra≈°anja smo vam na voljo.', // Previously contactDescription
                  workingHours: [ // Previously contactWorkingHours
                      { day: 'Ponedeljek - Petek', hours: '08:00 - 16:00' },
                      { day: 'Sobota, Nedelja, Prazniki', hours: 'Zaprto' }
                  ],
                  phoneNumber: '069 653335', // Previously contactPhoneNumber
                  address: 'Stegne 35, 1000 Ljubljana', // Previously contactAddress
              }
              // Add other blocks as needed (Testimonials, Gallery, FAQ),
              // potentially with hideSection: true if they were hidden before.
            ],
          },
          req: simulatedReq, // Pass the simulated request for access control/hooks
        });
        payload.logger.info(`'home' page seeded for tenant ${tenantId}.`);
        ```

6.  **Test Everything**
    *   Ensure that the new `Pages` collection and its layout functionality works as expected.
    *   Verify that the new seeding logic correctly maps the old `HomePage` data to the new structure.

7.  **Cleanup and Remove Dead Code**
    *   Fully delete [`src/globals/HomePage.ts`](mdc:src/globals/HomePage.ts) and remove all its references throughout the codebase.
    *   Remove any hardcoded assumptions in the frontend code (e.g., assuming the homepage data comes from a global named `HomePage`). Update frontend components to fetch data from the `Pages` collection, likely filtering by `slug: 'home'`.
