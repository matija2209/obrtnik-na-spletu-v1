/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    tenants: Tenant;
    users: User;
    media: Media;
    projects: Project;
    services: Service;
    testimonials: Testimonial;
    'faq-items': FaqItem;
    ctas: Cta;
    inquiries: Inquiry;
    machinery: Machinery;
    'opening-hours': OpeningHour;
    pages: Page;
    redirects: Redirect;
    forms: Form;
    pricelists: Pricelist;
    'price-list-sections': PriceListSection;
    'price-list-items': PriceListItem;
    banners: Banner;
    menus: Menu;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    'faq-items': FaqItemsSelect<false> | FaqItemsSelect<true>;
    ctas: CtasSelect<false> | CtasSelect<true>;
    inquiries: InquiriesSelect<false> | InquiriesSelect<true>;
    machinery: MachinerySelect<false> | MachinerySelect<true>;
    'opening-hours': OpeningHoursSelect<false> | OpeningHoursSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    pricelists: PricelistsSelect<false> | PricelistsSelect<true>;
    'price-list-sections': PriceListSectionsSelect<false> | PriceListSectionsSelect<true>;
    'price-list-items': PriceListItemsSelect<false> | PriceListItemsSelect<true>;
    banners: BannersSelect<false> | BannersSelect<true>;
    menus: MenusSelect<false> | MenusSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'business-info': BusinessInfo;
    navbar: Navbar;
    footer: Footer;
  };
  globalsSelect: {
    'business-info': BusinessInfoSelect<false> | BusinessInfoSelect<true>;
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  /**
   * Used for domain-based tenant handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /tenant-slug/page-slug
   */
  slug: string;
  /**
   * Define the color palette for this tenant.
   */
  colors?: {
    primary?: string | null;
    primaryForeground?: string | null;
    secondary?: string | null;
    secondaryForeground?: string | null;
    accent?: string | null;
    accentForeground?: string | null;
    background?: string | null;
    foreground?: string | null;
  };
  /**
   * Define fonts and weights for this tenant.
   */
  typography?: {
    displayFont?: string | null;
    bodyFont?: string | null;
    headingWeight?: string | null;
    bodyWeight?: string | null;
  };
  /**
   * Controls the roundness of elements (e.g., buttons, cards). Use rem, px, etc.
   */
  radius?: string | null;
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  username?: string | null;
  firstName: string;
  lastName: string;
  address?: string | null;
  phoneNumber?: string | null;
  vatId?: string | null;
  companyName?: string | null;
  roles?: ('super-admin' | 'user')[] | null;
  tenants?:
    | {
        tenant: number | Tenant;
        roles: ('tenant-admin' | 'tenant-viewer')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Naložite in upravljajte slike ter druge medijske datoteke.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  tenant?: (number | null) | Tenant;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Predstavite zaključene projekte ali reference.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  tenant?: (number | null) | Tenant;
  title: string;
  slug?: string | null;
  /**
   * Detailed description of the project
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  projectStatus: 'planned' | 'in-progress' | 'completed';
  location?: string | null;
  metadata?: {
    startDate?: string | null;
    completionDate?: string | null;
    client?: string | null;
    /**
     * Optional budget information
     */
    budget?: string | null;
  };
  projectImages?:
    | {
        image1: number | Media;
        altText1?: string | null;
        image2?: (number | null) | Media;
        altText2?: string | null;
        /**
         * Describe this image or the before/after comparison.
         */
        pairDescription?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add relevant tags to categorize this project
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Select the services that were part of this project.
   */
  servicesPerformed?: (number | Service)[] | null;
  /**
   * Link any testimonials specifically related to this project.
   */
  relatedTestimonials?: (number | Testimonial)[] | null;
  /**
   * Link to a detailed page about this project, if one exists.
   */
  dedicatedPage?: (number | null) | Page;
  updatedAt: string;
  createdAt: string;
}
/**
 * Upravljajte seznam storitev, ki jih ponujate.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * ID se generira samodejno iz naslova.
   */
  serviceId?: string | null;
  title: string;
  description: string;
  features?:
    | {
        featureText: string;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Primer: "€50", "Od €100", "€150 - €250", "Po dogovoru"
   */
  priceDisplay?: string | null;
  /**
   * Prikaži projekte, kjer je bila ta storitev uporabljena.
   */
  relatedProjects?: (number | Project)[] | null;
  /**
   * Prikaži mnenja strank, ki se nanašajo na to storitev.
   */
  relatedTestimonials?: (number | Testimonial)[] | null;
  /**
   * Poveži storitev z njeno namensko podstranjo, če obstaja.
   */
  dedicatedPage?: (number | null) | Page;
  updatedAt: string;
  createdAt: string;
}
/**
 * Mnenja strank o naših storitvah.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  /**
   * Datum, ko je bilo mnenje podano.
   */
  testimonialDate?: string | null;
  source?: ('google' | 'facebook' | 'website' | 'manual') | null;
  location?: string | null;
  service?: string | null;
  content: string;
  /**
   * Ocena stranke od 1 do 5 zvezdic.
   */
  rating: number;
  /**
   * Povežite to mnenje s specifičnimi storitvami ali projekti.
   */
  relatedItems?:
    | (
        | {
            relationTo: 'services';
            value: number | Service;
          }
        | {
            relationTo: 'projects';
            value: number | Project;
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  tenant?: (number | null) | Tenant;
  title: string;
  publishedAt?: string | null;
  slug?: string | null;
  layout?:
    | (
        | HeroBlock
        | ServicesBlock
        | ProjectHighlightsBlock
        | AboutBlock
        | TestimonialsBlock
        | GalleryBlock
        | ServiceAreaBlock
        | ContactBlock
        | FAQBlock
        | MachineryBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock".
 */
export interface HeroBlock {
  template: 'default' | 'one-hero-section' | 'two-column-hero';
  kicker?: string | null;
  title?: string | null;
  subtitle?: string | null;
  includeFollowersBadge?: boolean | null;
  ctas?: (number | Cta)[] | null;
  image?: (number | Media)[] | null;
  features?:
    | {
        iconText?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * Upravljajte pozive k dejanju, ki jih lahko vključite na različnih mestih.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ctas".
 */
export interface Cta {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Besedilo, ki bo prikazano na gumbu.
   */
  ctaText: string;
  link: {
    type: 'internal' | 'external';
    internalLink?: (number | null) | Page;
    externalUrl?: string | null;
    newTab?: boolean | null;
  };
  /**
   * Vnesite ime ikone iz knjižnice Lucide React (npr. ArrowRight, CheckCircle).
   */
  icon?: string | null;
  /**
   * Dodaten CSS razred za stilsko oblikovanje gumba na spletni strani (npr. primary-button, secondary-button).
   */
  ctaClassname?: string | null;
  /**
   * Izberite stil gumba (npr. Primary, Secondary). To lahko vpliva na izgled gumba na spletni strani.
   */
  ctaType?: ('primary' | 'secondary' | 'destructive' | 'outline' | 'ghost' | 'link' | 'icon') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock".
 */
export interface ServicesBlock {
  template:
    | 'default'
    | 'service-cards'
    | 'big-cards'
    | 'simple-list'
    | 'simple-card'
    | 'service-feature-row'
    | 'rounded-cards';
  title?: string | null;
  description?: string | null;
  /**
   * Select the services to display in this section.
   */
  selectedServices?: (number | Service)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'services';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProjectHighlightsBlock".
 */
export interface ProjectHighlightsBlock {
  template: 'default';
  title?: string | null;
  description?: string | null;
  buttonText?: string | null;
  buttonHref?: string | null;
  highlightedProjects?: (number | Project)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'projectHighlights';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock".
 */
export interface AboutBlock {
  template: 'default';
  title?: string | null;
  description?: string | null;
  benefits?:
    | {
        title?: string | null;
        description?: string | null;
        /**
         * Ime ikone (npr. Star, Trophy, Clock)
         */
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'about';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  template: 'default' | 'single-testimonial' | 'side-carousel' | 'three-carousel' | 'three-column-carousel-recycled';
  title?: string | null;
  description?: string | null;
  selectedTestimonials?: (number | Testimonial)[] | null;
  googleReviewCta?: (number | null) | Cta;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock".
 */
export interface GalleryBlock {
  template: 'default';
  title?: string | null;
  description?: string | null;
  galleryImages?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  galleryCta?: (number | null) | Cta;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceAreaBlock".
 */
export interface ServiceAreaBlock {
  template: 'default';
  title?: string | null;
  description?: string | null;
  showMap?: boolean | null;
  locations?:
    | {
        name: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceArea';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock".
 */
export interface ContactBlock {
  template: 'default' | 'simple';
  title?: string | null;
  description?: string | null;
  openingHoursSchedules?: (number | OpeningHour)[] | null;
  phoneNumber?: string | null;
  address?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contact';
}
/**
 * Določite različne urnike odpiralnega časa (npr. redni, sezonski, nujni).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "opening-hours".
 */
export interface OpeningHour {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Npr. "Redni urnik", "Poletni urnik", "Dežurstvo"
   */
  name: string;
  /**
   * Neobvezno. Urnik velja od tega datuma dalje.
   */
  startDate?: string | null;
  /**
   * Neobvezno. Urnik velja do tega datuma.
   */
  endDate?: string | null;
  dailyHours?:
    | {
        days: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday')[];
        timeSlots: {
          startTime: string;
          endTime: string;
          /**
           * Neobvezne opombe za ta specifični časovni termin (npr. "Samo po naročilu")
           */
          notes?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  /**
   * Neobvezne splošne opombe za celoten urnik.
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  template: 'default';
  title?: string | null;
  description?: string | null;
  selectedFaqs?: (number | FaqItem)[] | null;
  faqCta?: (number | null) | Cta;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * Pogosta vprašanja in odgovori.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-items".
 */
export interface FaqItem {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Izberite kategorijo za lažje filtriranje.
   */
  category?: ('general' | 'installation' | 'maintenance' | 'billing') | null;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Povežite to vprašanje s specifično storitvijo, če je relevantno.
   */
  relatedService?: (number | null) | Service;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MachineryBlock".
 */
export interface MachineryBlock {
  title?: string | null;
  description?: string | null;
  selectedMachinery?: (number | Machinery)[] | null;
  template: 'default';
  /**
   * Dodajte gumb 'call to action' pod seznam strojev.
   */
  callToAction?: (number | null) | Cta;
  id?: string | null;
  blockName?: string | null;
  blockType: 'machinery';
}
/**
 * Podatki o gradbeni mehanizaciji.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "machinery".
 */
export interface Machinery {
  id: number;
  tenant?: (number | null) | Tenant;
  tabName: string;
  /**
   * Npr. Volvo EL70, Komatsu PC210
   */
  name: string;
  description?: string | null;
  image?: (number | null) | Media;
  /**
   * Dodajte ključne specifikacije.
   */
  specifications?:
    | {
        specName: string;
        specDetails: {
          detail: string;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  /**
   * Npr. Premik stroja na kolesih za krajše razdalje (do 40km)
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries".
 */
export interface Inquiry {
  id: number;
  tenant?: (number | null) | Tenant;
  inquiryType?: ('general' | 'quote' | 'support' | 'other') | null;
  firstName: string;
  lastName: string;
  email: string;
  phone?: string | null;
  message: string;
  service: number | Service;
  location: string;
  status?: ('new' | 'in-progress' | 'completed') | null;
  consent: boolean;
  adminNotes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Upravljajte preusmeritve URL naslovov.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * The path to redirect from (e.g., /old-page). Must start with /.
   */
  from: string;
  /**
   * The path or URL to redirect to (e.g., /new-page or https://example.com). Must start with / or http(s)://.
   */
  to: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Ustvarite in upravljajte obrazce za zbiranje podatkov.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  tenant?: (number | null) | Tenant;
  title?: string | null;
  subtitle?: string | null;
  /**
   * A label for identifying this form in the admin panel.
   */
  label: string;
  /**
   * Email address where form submission notifications will be sent or replied from.
   */
  replyToEmail: string;
  /**
   * URL to redirect the user to after successful submission.
   */
  redirectUrl?: string | null;
  fields?:
    | {
        /**
         * Unique identifier for this field (e.g., "firstName", "message"). Used internally and for submission data.
         */
        name: string;
        /**
         * The label displayed to the user for this field.
         */
        label: string;
        placeholder?: string | null;
        type: 'text' | 'email' | 'textarea' | 'checkbox';
        required?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Upravljajte cenike za storitve ali izdelke.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricelists".
 */
export interface Pricelist {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Ime za celoten cenik (npr. Cenik Kosil, Cenik Vrtalnih Storitev 2024).
   */
  name: string;
  /**
   * Izberite tip cenika za lažjo organizacijo in prikaz.
   */
  priceListType: 'gastronomy' | 'service' | 'other';
  /**
   * Opis, ki se prikaže na vrhu tega specifičnega cenika.
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Izberite in uredite vrstni red sekcij, ki bodo vključene v ta cenik.
   */
  sections: (number | PriceListSection)[];
  /**
   * Dodajte gumb 'call to action' na dno cenika.
   */
  callToAction?: (number | null) | Cta;
  updatedAt: string;
  createdAt: string;
}
/**
 * Kategorije ali sekcije znotraj cenika (npr. Predjedi, Vrtanje).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-list-sections".
 */
export interface PriceListSection {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  /**
   * Nižja številka pomeni prikaz višje na seznamu.
   */
  displayOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Posamezne postavke na ceniku (npr. Goveja juha, Vrtanje 10cm luknje).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-list-items".
 */
export interface PriceListItem {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  description?: string | null;
  price: string;
  section: number | PriceListSection;
  displayOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Pasice za prikazovanje obvestil, ponudb, itd.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners".
 */
export interface Banner {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Služi samo za identifikacijo v administracijskem vmesniku.
   */
  internalName: string;
  /**
   * Glavna vsebina, ki bo prikazana v pasici.
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Označite to polje, da bo pasica potencialno vidna na spletni strani (ob upoštevanju datumov).
   */
  isActive?: boolean | null;
  /**
   * Pasica bo aktivna od tega datuma/ure (neobvezno).
   */
  startDate?: string | null;
  /**
   * Pasica bo neaktivna po tem datumu/uri (neobvezno).
   */
  endDate?: string | null;
  /**
   * Izberite neobvezen CTA gumb, ki bo prikazan skupaj s pasico.
   */
  cta?: (number | null) | Cta;
  updatedAt: string;
  createdAt: string;
}
/**
 * Upravljajte navigacijske menije za uporabo v glavi, nogi ali drugje.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Interno ime za lažje prepoznavanje menija (npr. Glavni meni, Meni za nogo).
   */
  title: string;
  menuItems?:
    | {
        title: string;
        hasChildren?: boolean | null;
        /**
         * Vnesite ciljno pot, npr. /o-nas ali #kontakt.
         */
        href?: string | null;
        /**
         * Dodajte elemente za spustni meni.
         */
        children?:
          | {
              title: string;
              /**
               * Vnesite ciljno pot, npr. /storitve/rezanje-betona.
               */
              href: string;
              /**
               * Kratek opis, ki se prikaže v spustnem meniju (neobvezno).
               */
              description: string;
              /**
               * Izberite ikono, ki se prikaže ob elementu v spustnem meniju.
               */
              icon?: ('Sparkles' | 'Zap' | 'Drop' | 'Hands' | 'Footprints' | 'Paintbrush') | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'faq-items';
        value: number | FaqItem;
      } | null)
    | ({
        relationTo: 'ctas';
        value: number | Cta;
      } | null)
    | ({
        relationTo: 'inquiries';
        value: number | Inquiry;
      } | null)
    | ({
        relationTo: 'machinery';
        value: number | Machinery;
      } | null)
    | ({
        relationTo: 'opening-hours';
        value: number | OpeningHour;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'pricelists';
        value: number | Pricelist;
      } | null)
    | ({
        relationTo: 'price-list-sections';
        value: number | PriceListSection;
      } | null)
    | ({
        relationTo: 'price-list-items';
        value: number | PriceListItem;
      } | null)
    | ({
        relationTo: 'banners';
        value: number | Banner;
      } | null)
    | ({
        relationTo: 'menus';
        value: number | Menu;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  slug?: T;
  colors?:
    | T
    | {
        primary?: T;
        primaryForeground?: T;
        secondary?: T;
        secondaryForeground?: T;
        accent?: T;
        accentForeground?: T;
        background?: T;
        foreground?: T;
      };
  typography?:
    | T
    | {
        displayFont?: T;
        bodyFont?: T;
        headingWeight?: T;
        bodyWeight?: T;
      };
  radius?: T;
  allowPublicRead?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  username?: T;
  firstName?: T;
  lastName?: T;
  address?: T;
  phoneNumber?: T;
  vatId?: T;
  companyName?: T;
  roles?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  description?: T;
  projectStatus?: T;
  location?: T;
  metadata?:
    | T
    | {
        startDate?: T;
        completionDate?: T;
        client?: T;
        budget?: T;
      };
  projectImages?:
    | T
    | {
        image1?: T;
        altText1?: T;
        image2?: T;
        altText2?: T;
        pairDescription?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  servicesPerformed?: T;
  relatedTestimonials?: T;
  dedicatedPage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  tenant?: T;
  serviceId?: T;
  title?: T;
  description?: T;
  features?:
    | T
    | {
        featureText?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  priceDisplay?: T;
  relatedProjects?: T;
  relatedTestimonials?: T;
  dedicatedPage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  testimonialDate?: T;
  source?: T;
  location?: T;
  service?: T;
  content?: T;
  rating?: T;
  relatedItems?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-items_select".
 */
export interface FaqItemsSelect<T extends boolean = true> {
  tenant?: T;
  category?: T;
  question?: T;
  answer?: T;
  relatedService?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ctas_select".
 */
export interface CtasSelect<T extends boolean = true> {
  tenant?: T;
  ctaText?: T;
  link?:
    | T
    | {
        type?: T;
        internalLink?: T;
        externalUrl?: T;
        newTab?: T;
      };
  icon?: T;
  ctaClassname?: T;
  ctaType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries_select".
 */
export interface InquiriesSelect<T extends boolean = true> {
  tenant?: T;
  inquiryType?: T;
  firstName?: T;
  lastName?: T;
  email?: T;
  phone?: T;
  message?: T;
  service?: T;
  location?: T;
  status?: T;
  consent?: T;
  adminNotes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "machinery_select".
 */
export interface MachinerySelect<T extends boolean = true> {
  tenant?: T;
  tabName?: T;
  name?: T;
  description?: T;
  image?: T;
  specifications?:
    | T
    | {
        specName?: T;
        specDetails?:
          | T
          | {
              detail?: T;
              id?: T;
            };
        id?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "opening-hours_select".
 */
export interface OpeningHoursSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  startDate?: T;
  endDate?: T;
  dailyHours?:
    | T
    | {
        days?: T;
        timeSlots?:
          | T
          | {
              startTime?: T;
              endTime?: T;
              notes?: T;
              id?: T;
            };
        id?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  publishedAt?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?: T | HeroBlockSelect<T>;
        services?: T | ServicesBlockSelect<T>;
        projectHighlights?: T | ProjectHighlightsBlockSelect<T>;
        about?: T | AboutBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        gallery?: T | GalleryBlockSelect<T>;
        serviceArea?: T | ServiceAreaBlockSelect<T>;
        contact?: T | ContactBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
        machinery?: T | MachineryBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock_select".
 */
export interface HeroBlockSelect<T extends boolean = true> {
  template?: T;
  kicker?: T;
  title?: T;
  subtitle?: T;
  includeFollowersBadge?: T;
  ctas?: T;
  image?: T;
  features?:
    | T
    | {
        iconText?: T;
        text?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock_select".
 */
export interface ServicesBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  selectedServices?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProjectHighlightsBlock_select".
 */
export interface ProjectHighlightsBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  buttonText?: T;
  buttonHref?: T;
  highlightedProjects?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock_select".
 */
export interface AboutBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  benefits?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  selectedTestimonials?: T;
  googleReviewCta?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock_select".
 */
export interface GalleryBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  galleryImages?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  galleryCta?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceAreaBlock_select".
 */
export interface ServiceAreaBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  showMap?: T;
  locations?:
    | T
    | {
        name?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock_select".
 */
export interface ContactBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  openingHoursSchedules?: T;
  phoneNumber?: T;
  address?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  template?: T;
  title?: T;
  description?: T;
  selectedFaqs?: T;
  faqCta?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MachineryBlock_select".
 */
export interface MachineryBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  selectedMachinery?: T;
  template?: T;
  callToAction?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  tenant?: T;
  from?: T;
  to?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  subtitle?: T;
  label?: T;
  replyToEmail?: T;
  redirectUrl?: T;
  fields?:
    | T
    | {
        name?: T;
        label?: T;
        placeholder?: T;
        type?: T;
        required?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricelists_select".
 */
export interface PricelistsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  priceListType?: T;
  description?: T;
  sections?: T;
  callToAction?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-list-sections_select".
 */
export interface PriceListSectionsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  displayOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price-list-items_select".
 */
export interface PriceListItemsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  price?: T;
  section?: T;
  displayOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners_select".
 */
export interface BannersSelect<T extends boolean = true> {
  tenant?: T;
  internalName?: T;
  content?: T;
  isActive?: T;
  startDate?: T;
  endDate?: T;
  cta?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus_select".
 */
export interface MenusSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  menuItems?:
    | T
    | {
        title?: T;
        hasChildren?: T;
        href?: T;
        children?:
          | T
          | {
              title?: T;
              href?: T;
              description?: T;
              icon?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Podatki o podjetju
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "business-info".
 */
export interface BusinessInfo {
  id: number;
  /**
   * Polno ime podjetja.
   */
  companyName: string;
  companyAbout: string;
  vatId: string;
  businessId: string;
  registryDate: string;
  location: string;
  phoneNumber: string;
  email: string;
  /**
   * Temna varianta logotipa, ki se uporablja na svetlih ozadjih.
   */
  logo?: (number | null) | Media;
  /**
   * Svetla varianta logotipa, ki se uporablja na temnih ozadjih. Če ni izbrana, se uporabi temna varianta.
   */
  logoLight?: (number | null) | Media;
  facebookUrl?: string | null;
  googleReviewUrl?: string | null;
  /**
   * Dodajte povezave do vaših profilov na platformah za pridobivanje strank.
   */
  leadGenPlatformUrls?:
    | {
        platformName: 'Primerjam.si' | 'Omisli.si' | 'MojMojster.net';
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Koordinate lokacije podjetja za prikaz na zemljevidu.
   */
  coordinates: {
    /**
     * Geografska širina lokacije podjetja.
     */
    latitude: number;
    /**
     * Geografska dolžina lokacije podjetja.
     */
    longitude: number;
  };
  /**
   * Radius v metrih, ki označuje območje kjer podjetje nudi svoje storitve.
   */
  serviceRadius: number;
  /**
   * Naslov, ki se prikaže v zavihku brskalnika in rezultatih iskanja.
   */
  metaTitle: string;
  /**
   * Kratek opis strani za rezultate iskanja (približno 155-160 znakov).
   */
  metaDescription: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Navigacija
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: number;
  /**
   * Interni naslov za identifikacijo te globalne nastavitve navigacije (neobvezno).
   */
  title?: string | null;
  /**
   * Ali naj se v navigaciji prikaže slika logotipa?
   */
  showLogoImage?: boolean | null;
  /**
   * Ali naj se v navigaciji prikaže besedilni naslov (če je logotip onemogočen ali ni naložen)?
   */
  showLogoText?: boolean | null;
  /**
   * Ali naj bo ozadje navigacije prozorno (običajno na vrhu strani)?
   */
  isTransparent?: boolean | null;
  /**
   * Ali naj bo navigacija pripeta na vrh zaslona med drsenjem?
   */
  isFixed?: boolean | null;
  /**
   * Izberite meni, ki bo uporabljen za glavno navigacijo.
   */
  mainMenu: number | Menu;
  /**
   * Izberite CTA gumb, ki bo prikazan v navigaciji.
   */
  mainCta?: (number | null) | Cta;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Podatki o podjetju
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Besedilo avtorskih pravic, ki bo prikazano na dnu noge. Uporabite {{year}} za dinamično leto.
   */
  copyrightText?: string | null;
  /**
   * Ali naj se v nogi prikaže besedilni naslov?
   */
  showLogoText?: boolean | null;
  /**
   * Dodajte eno ali več sekcij menijev, ki bodo prikazane v nogi.
   */
  menuSections?: MenuSectionItem[] | null;
  /**
   * Izberite meni, ki vsebuje povezave do družabnih omrežij (neobvezno). Ustvarite nov meni v sekciji "Meniji", če ga še nimate.
   */
  socialMenu?: (number | null) | Menu;
  showContactInFooter?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MenuSectionItem".
 */
export interface MenuSectionItem {
  title?: string | null;
  menu: number | Menu;
  id?: string | null;
  blockName?: string | null;
  blockType: 'menuSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "business-info_select".
 */
export interface BusinessInfoSelect<T extends boolean = true> {
  companyName?: T;
  companyAbout?: T;
  vatId?: T;
  businessId?: T;
  registryDate?: T;
  location?: T;
  phoneNumber?: T;
  email?: T;
  logo?: T;
  logoLight?: T;
  facebookUrl?: T;
  googleReviewUrl?: T;
  leadGenPlatformUrls?:
    | T
    | {
        platformName?: T;
        url?: T;
        id?: T;
      };
  coordinates?:
    | T
    | {
        latitude?: T;
        longitude?: T;
      };
  serviceRadius?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  title?: T;
  showLogoImage?: T;
  showLogoText?: T;
  isTransparent?: T;
  isFixed?: T;
  mainMenu?: T;
  mainCta?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  copyrightText?: T;
  showLogoText?: T;
  menuSections?:
    | T
    | {
        menuSection?: T | MenuSectionItemSelect<T>;
      };
  socialMenu?: T;
  showContactInFooter?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MenuSectionItem_select".
 */
export interface MenuSectionItemSelect<T extends boolean = true> {
  title?: T;
  menu?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}